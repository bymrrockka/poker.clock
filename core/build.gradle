plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'jvm-test-suite'
    id 'java-test-fixtures'
    alias(libs.plugins.springBootPlugin)
    alias(libs.plugins.springDepManagementPlugin)
}

group = 'by.mrrockka'
version = '1.2.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

defaultTasks "clean", "assemble"

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.defaultComponentModel=spring',
    ]
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation libs.springBootJdbc
    implementation libs.postgresql
    implementation libs.liquibase
    implementation libs.jacksonDataformat
    implementation libs.mapstructCore
    implementation libs.lombokMapstructBinding
    implementation libs.hikariCP

    compileOnly libs.lombok
    annotationProcessor libs.lombok
    annotationProcessor libs.mapstructProcessor

    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok
    testAnnotationProcessor libs.mapstructProcessor
    testImplementation libs.mockitoCore
    testImplementation libs.mockitoJupiter
    testImplementation libs.assertjCore

    testFixturesCompileOnly libs.lombok
    testFixturesAnnotationProcessor libs.lombok
    testFixturesAnnotationProcessor libs.mapstructProcessor
    testFixturesApi libs.springBootTest
    testFixturesApi libs.testContainerPostgresql
    testFixturesApi libs.testContainerJupiter
    testFixturesApi libs.jupiter
    testFixturesApi(libs.javaFaker) {
        exclude group: 'org.yaml'
    }
}

testing {
    suites {
        configureEach {
            useJUnitJupiter()
            targets {
                all {
                    testTask.configure {
                        testLogging {
                            events("passed", "failed")
                        }
                    }
                }
            }
        }

        integrationTest(JvmTestSuite) {
            dependencies {
                implementation libs.assertjCore
                implementation libs.springBootTest

                compileOnly libs.lombok
                annotationProcessor libs.lombok
                annotationProcessor libs.mapstructProcessor

                implementation(project())
                implementation(testFixtures(project()))
            }
        }
    }
}

bootJar {
    enabled = false
}

bootRun {
    enabled = false
}

jar {
    enabled = true
}