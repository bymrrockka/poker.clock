spring:
  liquibase:
    enabled: true
    change-log: db/changelog/db.changelog-master.yml

bot:
  properties:
    enabled: true
    token: token
    name: Bot
    nickname: bot
  scheduler:
    cron: "* * * * * *"
  description:
    commands:
      - name: bounty_game
        enabled: true
        alias: bg
        description: Starts bounty tournament game
        details: |
          You could create a bounty tournament game using /bounty_game command with list of players nicknames that separated with a space.
          Also you should specify buy-in, stack and bounty amount.
          There should be at least two players for the game
          Example: 
          /bounty_game
          buyin: 10
          stack: 10
          bounty: 10
          @nickname 
          @nickname
      - name: tournament_game
        enabled: true
        alias: tg
        description: Starts a tournament game
        details: |
          You could create a tournament game using /tournament_game command with list of players nicknames that separated with a space.
          Also you should specify buy-in, stack amount.
          There should be at least two players for the game
          Example: 
          /tournament_game
          buyin: 10
          stack: 10
          @nickname 
          @nickname
      - name: cash_game
        enabled: true
        alias: cg
        description: Starts a cash game
        details: |
          You could create a cash game using /cash_game command with list of players nicknames that separated with a space.
          Also you should specify buy-in and stack amounts.
          There should be at least two players for the game
          Example: 
          /cash_game
          buyin: 10
          stack: 10
          @nickname 
          @nickname
      - name: entry
        enabled: true
        description: Player entry to game
        details: |
          For players reentries or new players entry use /entry command with nickname to save it against the last started game.
          You could specify multiple players and amount of buy-in which is useful for cash game with not strict max buy-in amount.
          You could forward game message in case there are multiple games happen in parallel to store against it.
          Examples: 
          /entry @nickname
          /entry @nickname 20 
          /entry @nickname @nickname
          /entry @nickname @nickname 20
      - name: bounty
        enabled: true
        description: Bounty transaction in game
        details: |
          When one player kicks another, the one who kick gets bounty chip, to make it happen use /bounty command with bounty transaction between players which will be executed against the last started BOUNTY game.
          Message should contain person who kicked, keyword and person who was kicked. 
          You could forward game message in case there are multiple games happen in parallel to store against it.
          Examples: 
          /bounty @nickname kicked @nickname
      - name: withdrawal
        enabled: true
        alias: wdrl
        description: Player withdrawal from a cash game
        details: |
          For players withdrawals use /withdrawal command with nickname and amount to save it against the last started game.
          You could specify multiple players with same withdrawal amount.
          You could forward game message in case there are multiple games happen in parallel to store against it.
          Examples: 
          /withdrawal @nickname 20
          /withdrawal @nickname @nickname 20
      - name: prize_pool
        enabled: true
        alias: pp
        description: Stores a prize pool for a tournament
        details: |
          When you ready to specify prize pool for tournament game use /prize_pool command to store position and percentage map.
          Should contain at least one position.
          Total percentage should be equal to 100%.
          You could forward game message in case there are multiple games happen in parallel to store against it.
          Examples: 
          /prize_pool 
          1. 100
          /prize_pool 
          1 70%
          2 30%
      - name: finale_places
        enabled: true
        alias: fp
        description: Stores a finale places for a tournament
        details: |
          When tournament is finished you could specify places for players who won the pot with /finale_places command.
          Should contain at least one position with player nickname.
          You could forward game message in case there are multiple games happen in parallel to store against it.
          Examples: 
          /finale_places 
          1. @nickname
          /finale_places 1 @nickname, 2 @nickname
      - name: calculate
        enabled: true
        description: Calculate game payouts
        details: |
          When game is over you could use /calculate command to view calculated payouts.
          You could forward game message in case there are multiple games happen in parallel to store against it.
          Information needed to calculate:
          - Tournament: 
            - prize pool
            - finale places
          - Bounty Tournament: 
            - prize pool
            - finale places
            - bounties 
          - Cash game:
            - withdrawals
          Examples: 
          /calculate
      - name: game_stats
        enabled: true
        description: Game statistics
        details: |
          When you want to see game statistics you could use /game_stats command.
          You could forward game message in case there are multiple games happen in parallel to store against it.
          Examples: 
          /game_stats
      - name: player_stats
        enabled: true
        description: Player in game statistics
        details: |
          When you want to see your statistics as player in game you could use /player_stats command.
          You could forward game message in case there are multiple games happen in parallel to select against it.
          Examples: 
          /player_stats
      - name: my_stats
        enabled: true
        description: Person chat statistics
        details: |
          When you want to see your chat statistics for all the games you were into you could use /my_stats command.
          Examples: 
          /my_stats
      - name: help
        enabled: true
        description: Post it with a command name for command details
        details: |
          You could use this command to get details about supported commands.
          Empty command will send you this message.
          Examples: 
          /help
          /help calculate
      - name: create_poll
        enabled: true
        description: Created a scheduled poll with specific message and repeat time for chat
        details: |
          You could use this command to scheduled a poll for chat.
          Cron field and options field are required ones.
          Cron is default cron format starting from seconds to year. (Sec Min Hour Day-of-month Month Day-of-week) 
          For options you can mark one of it with "participant" keyword to make it an option to start game with (all answered this options would be used to create a game).
          Examples: 
          /create_poll
          cron: 40 59 10 1-7 JAN MON-TUE
          message: Example message
          options:
          1. Yes 
          /create_poll
          cron: * 00 17 * * MON
          message: Example message
          options:
          1. Yes - participant
          2. No
          3. Maybe
      - name: stop_poll
        enabled: true
        description: Stops already created scheduled poll
        details: |
          You could use this command to stop already created scheduled a poll for chat.
          You should reply to poll creation message in order to do that.
          Examples: 
          /stop_poll
